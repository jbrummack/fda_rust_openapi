/*
 * Food Data Central API
 *
 * The FoodData Central API provides REST access to FoodData Central (FDC). It is intended primarily to assist application developers wishing to incorporate nutrient data into their applications or websites.   To take full advantage of the API, developers should familiarize themselves with the database by reading the database documentation available via links on [Data Type Documentation](https://fdc.nal.usda.gov/data-documentation.html). This documentation provides the detailed definitions and descriptions needed to understand the data elements referenced in the API documentation.      Additional details about the API including rate limits, access, and licensing are available on the [FDC website](https://fdc.nal.usda.gov/api-guide.html)
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AbridgedFoodItem {
    #[serde(rename = "dataType")]
    pub data_type: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "fdcId")]
    pub fdc_id: i32,
    #[serde(rename = "foodNutrients", skip_serializing_if = "Option::is_none")]
    pub food_nutrients: Option<Vec<models::AbridgedFoodNutrient>>,
    #[serde(rename = "publicationDate", skip_serializing_if = "Option::is_none")]
    pub publication_date: Option<String>,
    /// only applies to Branded Foods
    #[serde(rename = "brandOwner", skip_serializing_if = "Option::is_none")]
    pub brand_owner: Option<String>,
    /// only applies to Branded Foods
    #[serde(rename = "gtinUpc", skip_serializing_if = "Option::is_none")]
    pub gtin_upc: Option<String>,
    /// only applies to Foundation and SRLegacy Foods
    #[serde(rename = "ndbNumber", skip_serializing_if = "Option::is_none")]
    pub ndb_number: Option<i32>,
    /// only applies to Survey Foods
    #[serde(rename = "foodCode", skip_serializing_if = "Option::is_none")]
    pub food_code: Option<String>,
}

impl AbridgedFoodItem {
    pub fn new(data_type: String, description: String, fdc_id: i32) -> AbridgedFoodItem {
        AbridgedFoodItem {
            data_type,
            description,
            fdc_id,
            food_nutrients: None,
            publication_date: None,
            brand_owner: None,
            gtin_upc: None,
            ndb_number: None,
            food_code: None,
        }
    }
}

